// Generated by Apple Swift version 4.0.2 effective-3.2.2 (swiftlang-900.0.69.2 clang-900.0.38)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import CoreBluetooth;
#endif

#import <Orphe/Orphe.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("Orphe")
enum ORPSize : NSInteger;
@class NSNumber;
enum ORPScene : NSInteger;

SWIFT_CLASS("_TtC5Orphe7ORPData")
@interface ORPData : NSObject
@property (nonatomic, readonly) NSInteger idNumber;
@property (nonatomic, readonly, copy) NSUUID * _Nullable uuid;
@property (nonatomic) ORPSide side;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) enum ORPSize size;
@property (nonatomic, readonly) BOOL isCharging;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull RSSI;
@property (nonatomic, readonly) uint8_t fwVersion;
@property (nonatomic, readonly) BOOL isReconnecting;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSArray<NSNumber *> * _Nonnull)getQuat SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getEuler SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getAcc SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getGyro SWIFT_WARN_UNUSED_RESULT;
- (float)getMag SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getAccOfGravity SWIFT_WARN_UNUSED_RESULT;
- (uint8_t)getShock SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getNormalizedEuler SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getNormalizedAcc SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getNormalizedGyro SWIFT_WARN_UNUSED_RESULT;
- (float)getNormalizedMag SWIFT_WARN_UNUSED_RESULT;
- (float)getNormalizedShock SWIFT_WARN_UNUSED_RESULT;
- (ORPAccRange)getCurrentAccRange SWIFT_WARN_UNUSED_RESULT;
- (ORPGyroRange)getCurrentGyroRange SWIFT_WARN_UNUSED_RESULT;
- (void)readRSSI;
- (CBPeripheralState)state SWIFT_WARN_UNUSED_RESULT;
- (void)resetAttitude;
- (void)writeDataWithData:(NSData * _Nonnull)data;
- (void)setScene:(enum ORPScene)scene;
- (void)setSceneWithSceneNum:(uint8_t)sceneNum;
- (void)triggerLightWithLightNum:(uint8_t)lightNum;
- (void)triggerLightWithHSVColorWithLightNum:(uint8_t)lightNum hue:(uint16_t)hue saturation:(uint8_t)saturation brightness:(uint8_t)brightness;
- (void)triggerLightWithRGBColorWithLightNum:(uint8_t)lightNum red:(uint8_t)red green:(uint8_t)green blue:(uint8_t)blue;
- (void)setColorRGBWithLightNum:(uint8_t)lightNum red:(uint8_t)red green:(uint8_t)green blue:(uint8_t)blue;
- (void)setColorHSVWithLightNum:(uint8_t)lightNum hue:(uint16_t)hue saturation:(uint8_t)saturation brightness:(uint8_t)brightness;
- (void)switchLightWithLightNum:(uint8_t)lightNum flag:(BOOL)flag;
- (void)requestSetName:(NSString * _Nonnull)name;
- (void)requestSetSize:(enum ORPSize)size;
- (void)requestOrpheInfo;
- (void)setBLECommunicationSpeedPriorityModeWithIsActive:(BOOL)isActive;
- (void)setAccRangeWithRange:(ORPAccRange)range;
- (void)setGyroRangeWithRange:(ORPGyroRange)range;
- (void)switchToOppositeSide;
- (void)requestChangeSide:(ORPSide)side;
- (void)setMaxBrightness:(uint8_t)maxBrightness;
- (void)setGestureSensitivity:(ORPGestureSensitivity)sensitivity;
- (void)requestSleep;
- (void)setSensorValuesWithQuat:(NSArray<NSNumber *> * _Nonnull)quat euler:(NSArray<NSNumber *> * _Nonnull)euler acc:(NSArray<NSNumber *> * _Nonnull)acc gyro:(NSArray<NSNumber *> * _Nonnull)gyro mag:(uint16_t)mag shock:(uint8_t)shock;
@end

@protocol ORPManagerDelegate;

SWIFT_CLASS("_TtC5Orphe10ORPManager")
@interface ORPManager : NSObject
@property (nonatomic, readonly) BOOL isScanning;
@property (nonatomic, readonly, copy) NSArray<ORPData *> * _Nonnull availableORPDataArray;
@property (nonatomic, readonly, copy) NSArray<ORPData *> * _Nonnull connectedORPDataArray;
@property (nonatomic) BOOL isEnableAutoReconnection;
@property (nonatomic) float autoReconnectionTimeLimitSec;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull autoConnectOrpheUUIDs;
@property (nonatomic, weak) id <ORPManagerDelegate> _Nullable delegate;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ORPManager * _Nonnull sharedInstance;)
+ (ORPManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (void)startScan;
- (void)stopScan;
- (void)connectWithOrphe:(ORPData * _Nonnull)orphe;
- (void)cancelAllPendingConnection;
- (void)disconnectWithOrphe:(ORPData * _Nonnull)orphe;
- (CBCentralManagerState)getBluetoothState SWIFT_WARN_UNUSED_RESULT;
- (NSArray<ORPData *> * _Nonnull)getOrpheArrayWithSide:(ORPSide)side SWIFT_WARN_UNUSED_RESULT;
- (ORPData * _Nullable)getOrpheDataWithIdNumber:(NSInteger)idNumber SWIFT_WARN_UNUSED_RESULT;
- (ORPData * _Nullable)getOrpheDataWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getConnectedOrpheNum SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isLeftConnected SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isRightConnected SWIFT_WARN_UNUSED_RESULT;
@end

@class CBCentralManager;
@class CBPeripheral;

@interface ORPManager (SWIFT_EXTENSION(Orphe)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end

@class CBService;
@class CBCharacteristic;

@interface ORPManager (SWIFT_EXTENSION(Orphe)) <CBPeripheralDelegate>
- (void)peripheralDidUpdateRSSI:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class ORPGestureEventArgs;

SWIFT_PROTOCOL("_TtP5Orphe18ORPManagerDelegate_")
@protocol ORPManagerDelegate
@optional
- (void)orpheDidUpdateBLEStateWithState:(CBCentralManagerState)state;
- (void)orpheDidDiscoverWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidDisappearWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidUpdateRSSIWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidFailToConnectWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidDisconnectWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidConnectWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidUpdateSensorDataWithOrphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidCatchGestureEventWithGestureEvent:(ORPGestureEventArgs * _Nonnull)gestureEvent orphe:(ORPData * _Nonnull)orphe;
- (void)orpheDidUpdateOrpheInfoWithOrphe:(ORPData * _Nonnull)orphe;
@end

typedef SWIFT_ENUM(NSInteger, ORPScene) {
  ORPSceneScene1 = 1,
  ORPSceneScene2 = 2,
  ORPSceneScene3 = 3,
  ORPSceneScene4 = 4,
  ORPSceneScene5 = 5,
  ORPSceneScene6 = 6,
  ORPSceneScene7 = 7,
  ORPSceneSceneSDK = 11,
};

typedef SWIFT_ENUM(NSInteger, ORPSize) {
  ORPSizeSize_235 = 0,
  ORPSizeSize_255 = 1,
  ORPSizeSize_270 = 2,
  ORPSizeSize_285 = 3,
  ORPSizeSize_305 = 4,
};

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
